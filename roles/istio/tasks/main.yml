---
- name: Download istio
  get_url:
    url: "{{ istio_url }}"
    dest: "/home/{{ cloud_user }}/"
    mode: '0644'

- name: create the installation directory
  file:
    path: istio
    state: directory

- name: Unpack {{ istio_dest_targz }}
  shell: |
    mkdir -p  istio
    tar -xvf /home/{{ cloud_user }}/istio-{{ istio_version }}-linux.tar.gz --directory istio --strip-components=1
  args:
    warn: false
  register: response
- debug: msg={{ response }}
  
- name: Copy istioctl to /usr/local/bin
  become: true
  copy:
    src: "/home/{{ cloud_user }}/istio/bin/istioctl"
    dest: "/usr/local/bin/istioctl"
    remote_src: yes
    mode: 0755
  
- name: Show /usr/local/bin/istioctl
  shell: ls -al /usr/local/bin/istioctl
  register: response
- debug: msg={{ response }}
  
- name: Create the namespace {{ istio_namespace }}
  shell: kubectl create namespace {{ istio_namespace }}
  register: response
  failed_when:
    - response.rc > 1
    - response.rc == 1 and "(AlreadyExists)" not in result.stderr
- debug: msg={{ response }}

- name: Create secret YAML file
  copy:
    dest: "/home/{{ cloud_user }}/istio_secret.yaml"
    content: |
      apiVersion: v1
      kind: Secret
      metadata: 
        name: kiali
        namespace: {{ istio_namespace }}
        labels:
          app: kiali
      type: Opaque
      data:
        username: {{ kiali_username }}
        passphrase: {{ kiali_password }}

- name: Show /home/{{ cloud_user }}/istio_secret.yaml
  shell: cat /home/{{ cloud_user }}/istio_secret.yaml
  register: response
- debug: msg={{ response }}
  
- name: Create secret
  shell: kubectl create -f /home/{{ cloud_user }}/istio_secret.yaml
  register: response
  failed_when: "response.rc != 0 and 'already exists' not in response.stderr"
- debug: msg={{ response }}
    
- name: Install Custom Reference Definitions
  shell: helm template install/kubernetes/helm/istio-init --name istio-init --namespace istio-system | kubectl apply -f -
  args:
    chdir: "/home/{{ cloud_user }}/istio"
    warn: false
  register: response
  failed_when: "response.rc != 0 and 'already exists' not in response.stderr"
- debug: msg={{ response }}
  
- name: Wait for CRDs to be created
  shell: kubectl -n istio-system wait --for=condition=complete job --all --timeout=120s
  register: response
  failed_when: "response.rc != 0 and 'already exists' not in response.stderr"
- debug: msg={{ response }}

- name: Istio init
  shell: helm install install/kubernetes/helm/istio --name istio --namespace istio-system
  args:
    chdir: "/home/{{ cloud_user }}/istio"
    warn: false
  register: response
  failed_when: "response.rc != 0 and 'already exists' not in response.stderr"
- debug: msg={{ response }}